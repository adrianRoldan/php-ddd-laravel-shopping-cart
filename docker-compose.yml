version: '3.8'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cart.app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: cart.webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8.0.30
    command:
      - '--character-set-server=utf8mb4'
      - --default-authentication-plugin=mysql_native_password
    container_name: cart.db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: shoppingcart
      MYSQL_ROOT_PASSWORD: b3j40f17
      MYSQL_USER: shoppingcart
      MYSQL_PASSWORD: b3j40f1t
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./storage/backups/init:/docker-entrypoint-initdb.d
      - ./.docker/mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf
      - dbdata:/var/lib/mysql/
    networks:
      - app-network

  #phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: cart.phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
    depends_on:
      - db
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
